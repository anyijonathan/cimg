{"version":3,"file":"static/js/227.254ef37c.chunk.js","mappings":"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","sources":["components/FormSelect.js","components/InfoCard.js","pages/SuperAdminPages/Dashboard.js","utils/constants.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst FormSelect = ({\r\n\tonChange,\r\n\tid,\r\n\tlabel,\r\n\ttype,\r\n\toptions,\r\n\tvalue,\r\n\tdefaultValue,\r\n\tclassName,\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"font-circular-std\">\r\n\t\t\t{label && (\r\n\t\t\t\t<label className=\"block mb-4 text-sm font-medium text-black-secondary\">\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\r\n\t\t\t<select\r\n\t\t\t\tid={id}\r\n\t\t\t\tclassName={\r\n\t\t\t\t\t`border border-opacity-50 border-black-40 text-black-40 text-sm rounded outline-none focus:border-black-40 focus:border-opacity-50 focus:ring-gray-200 block pl-4 pr-[0.625rem]` +\r\n\t\t\t\t\tclassName\r\n\t\t\t\t}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\r\n\t\t\t>\r\n\t\t\t\t{options &&\r\n\t\t\t\t\toptions.map((options) => (\r\n\t\t\t\t\t\t<option key={options.id} value={options.value}>\r\n\t\t\t\t\t\t\t{options.name}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FormSelect;\r\n","import React from \"react\";\r\nimport FormSelect from \"./FormSelect\";\r\nimport { Card, CardBody } from \"@windmill/react-ui\";\r\n\r\nfunction InfoCard({\r\n  title,\r\n  cardValue,\r\n  id,\r\n  type,\r\n  onChange,\r\n  value,\r\n  options,\r\n  additionalStyle,\r\n  spanText,\r\n  cardLink,\r\n  linkText,\r\n  additionalSelectStyle,\r\n  additionalCardStyle,\r\n  additionalLinkStyle,\r\n  symbol\r\n}) {\r\n  return (\r\n    <Card\r\n      className={`md:w-96 ${additionalCardStyle} md:h-44 mb-6 pb-4 pl-4 ring-white bg-other-background  border border-black-secondary border-opacity-5`}\r\n    >\r\n      <CardBody className=\"flex\">\r\n        <div className=\"w-96 pt-[0.2rem]\">\r\n          <p className=\"text-base font-bold text-black-secondary pb-6\">\r\n            {title}\r\n          </p>\r\n          <p className={`text-3xl font-bold + ${additionalStyle}`}>\r\n          {symbol} {cardValue}\r\n            <span className=\"text-sm font-bold pl-3 text-black-70 opacity-70\">\r\n              {spanText}\r\n            </span>\r\n          </p>\r\n          <a\r\n            href={`${cardLink || \"\"} `}\r\n            className={`font-bold ${additionalLinkStyle} text-sm text-purple-primary opacity-70`}\r\n          >\r\n            {linkText}\r\n          </a>\r\n        </div>\r\n\r\n        <select\r\n          id={id}\r\n          className={`bg-gray-50 border border-none text-black-70 text-xs text-sm rounded-lg outline-none focus:border-white cursor-pointer focus:ring-white block w-2/6 h-1/5 ${additionalSelectStyle}`}\r\n          type={type}\r\n          onChange={onChange}\r\n          value={value}\r\n        >\r\n      \r\n           {options &&\r\n            options.map((options) => (\r\n              <option key={options.id} value={options.value}>\r\n                {options.name}\r\n              </option>\r\n            ))} \r\n\r\n        </select>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InfoCard from \"../../components/InfoCard\";\r\nimport { LinkIcon } from \"../../icons/index\";\r\nimport FormSelect from \"../../components/FormSelect\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchDashboardData } from \"../../Redux/Slices/dashboardSlice\";\r\nimport { getAllActiveVendors } from \"../../Redux/Slices/vendorSlice\";\r\nimport { getAllActiveTelcos } from \"../../Redux/Slices/telcoSlice\";\r\nimport { PeriodFilterOption, PeriodOption } from \"../../utils/constants\";\r\nimport { Spinner } from \"flowbite-react\";\r\nimport { Pagination } from \"@windmill/react-ui\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([])\r\n  const [gettingDashboardData, setGettingDashboardData] = useState(false);\r\n  const [gettingDashboardDataError, setGettingDashboardDataError] = useState(false);\r\n  const [dashboardText, setDashboardText] = useState(\"\")\r\n  const [dashboardStates, setDashboardStates] = useState({\r\n    totalCompletedTransaction:0,\r\n    dailyCompletedTransaction: 0, \r\n    weeklyCompletedTransaction:0,\r\n    monthlyCompletedTransaction: 0,\r\n    totalSuccessPercentage:0,\r\n    totalDailySuccessPercentage: 0,\r\n    totalWeeklySuccessPercentage:0,\r\n    totalMonthlySuccessPercentage:0,\r\n    totalFailurePercentage:0,\r\n    totalDailyFailurePercentage: 0,\r\n    totalWeeklyFailurePercentage:0,\r\n    totalMonthlyFailurePercentage:0,\r\n    monthlyTransactions: [],\r\n    weeklyTransactions: [],\r\n    dailyTransactions: [],\r\n    vendorTelcoMap: [],\r\n    vendorList: [],\r\n    telcoList : [],\r\n    totalTransactionValue: 0,\r\n    percentageSuccess: 0,\r\n    percentageFailure: 0,\r\n    transactionsList: []\r\n\r\n    })\r\n    \r\n\r\n   const handleTotalTransactionSelectChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    if (value === \"Total\"){\r\n      setDashboardStates((prevStates) => ({\r\n        ...prevStates, \r\n         totalTransactionValue : dashboardStates.totalCompletedTransaction\r\n      })) \r\n     }\r\n  if (value === \"Today\"){\r\n    setDashboardStates((prevStates) => ({\r\n      ...prevStates, \r\n       totalTransactionValue : dashboardStates.dailyCompletedTransaction\r\n    })) \r\n   \r\n     }\r\n     if (value === \"Weekly\"){\r\n      setDashboardStates((prevStates) => ({\r\n        ...prevStates, \r\n         totalTransactionValue : dashboardStates.weeklyCompletedTransaction\r\n      })) \r\n     }\r\n      if (value === \"Monthly\"){\r\n       setDashboardStates((prevStates) => ({\r\n         ...prevStates, \r\n          totalTransactionValue : dashboardStates.monthlyCompletedTransaction\r\n       })) \r\n     }\r\n   }\r\n\r\n   \r\n   const handleTotalTransactionVolumeSelectChange = (e) => {\r\n \r\n    const { value } = e.target;\r\n\r\n    if (value === \"Total\" || value === \"\"){\r\n      setDashboardStates((prevStates) => ({\r\n        ...prevStates, \r\n         percentageSuccess: dashboardStates.totalFailurePercentage,\r\n         percentageFailure: dashboardStates.totalSuccessPercentage\r\n      })) \r\n     }\r\n  if (value === \"Today\"){\r\n    setDashboardStates((prevStates) => ({\r\n      ...prevStates, \r\n      percentageSuccess: dashboardStates.totalDailySuccessPercentage,\r\n      percentageFailure: dashboardStates.totalDailyFailurePercentage\r\n    })) \r\n   \r\n     }\r\n     if (value === \"Weekly\"){\r\n      setDashboardStates((prevStates) => ({\r\n        ...prevStates, \r\n        percentageSuccess: dashboardStates.totalWeeklySuccessPercentage,\r\n        percentageFailure: dashboardStates.totalWeeklyFailurePercentage\r\n      })) \r\n     }\r\n      if (value === \"Monthly\"){\r\n       setDashboardStates((prevStates) => ({\r\n         ...prevStates, \r\n         percentageSuccess: dashboardStates.totalMonthlySuccessPercentage,\r\n         percentageFailure: dashboardStates.totalMonthlyFailurePercentage\r\n       })) \r\n     }\r\n   }\r\n\r\n   \r\n   const handleTransactionVolumeChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n  if (value === \"today\"){\r\n    setData(\r\n      dashboardStates.dailyTransactions.slice(\r\n        (page - 1) * resultsPerPage,\r\n        page * resultsPerPage\r\n      )\r\n    );\r\n   \r\n     }\r\n     if (value === \"weekly\"){\r\n\r\n      setData(\r\n        dashboardStates.weeklyTransactions.slice(\r\n          (page - 1) * resultsPerPage,\r\n          page * resultsPerPage\r\n        )\r\n      );\r\n     }\r\n      if (value === \"monthly\"){\r\n       setData(\r\n        dashboardStates.monthlyTransactions.slice(\r\n          (page - 1) * resultsPerPage,\r\n          page * resultsPerPage\r\n        )\r\n      );\r\n     }\r\n   }\r\n\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 5;\r\n  const totalResults = dashboardStates.transactionsList.length;\r\n\r\n  // pagination change control\r\n\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n   useEffect(() => {\r\n    setData(\r\n      dashboardStates.transactionsList.slice(\r\n        (page - 1) * resultsPerPage,\r\n        page * resultsPerPage\r\n      )\r\n    );\r\n  }, [page]);\r\n  \r\n    // GETTING USER LIST ON PAGE LOAD\r\n    const getDashboardData = async () => {\r\n      try {\r\n        setGettingDashboardData(true)\r\n        setDashboardText(\"Loading dashboard data...\")\r\n        let responseData = await fetchDashboardData();\r\n        let vendorData = await getAllActiveVendors();\r\n        let telcoData = await getAllActiveTelcos();\r\n       \r\n\r\n  setDashboardStates((prevStates) => ({\r\n    ...prevStates,\r\n    totalCompletedTransaction:responseData.data.cardTrxnCompleted.totalTrxnCompletedAll,\r\n    dailyCompletedTransaction: responseData.data.cardTrxnCompleted.totalTrxnCompletedDaily, \r\n    weeklyCompletedTransaction: responseData.data.cardTrxnCompleted.totalTrxnCompletedWeekly,\r\n    monthlyCompletedTransaction:  responseData.data.cardTrxnCompleted.totalTrxnCompletedmonthly,\r\n    totalSuccessPercentage: responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageAllSuccessful.toFixed(1),\r\n    totalDailySuccessPercentage: responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageDailySuccess.toFixed(1),\r\n    totalWeeklySuccessPercentage:responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageWeeklySuccess.toFixed(1),\r\n    totalMonthlySuccessPercentage:responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentagemonthlySuccess.toFixed(1),\r\n    totalFailurePercentage: responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageAllFailed.toFixed(1),\r\n    totalDailyFailurePercentage: responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageDailyFailed.toFixed(1),\r\n    totalWeeklyFailurePercentage:responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageWeeklyFailed.toFixed(1),\r\n    totalMonthlyFailurePercentage:responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentagemonthlyFailed.toFixed(1),\r\n    monthlyTransactions: responseData.data.telcosAndTransactions.telcoAndTrxThisMonth,\r\n    weeklyTransactions: responseData.data.telcosAndTransactions.telcoAndTrxThisWeek,\r\n    dailyTransactions: responseData.data.telcosAndTransactions.telcoAndTrxToday,\r\n    vendorTelcoMap: responseData.data.telcosAndVendorMapping,\r\n    vendorList: vendorData.dataList,\r\n    telcoList: telcoData.dataList,\r\n    totalTransactionValue:  responseData.data.cardTrxnCompleted.totalTrxnCompletedAll,\r\n    percentageSuccess: responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageAllSuccessful.toFixed(1),\r\n    percentageFailure:  responseData.data.cardTrxnPercentageCompleted.totalTrxnPercentageAllFailed.toFixed(1),\r\n    transactionsList : responseData.data.telcosAndTransactions.telcoAndTrxToday\r\n\r\n\r\n\r\n  }))\r\n\r\n  \r\n  setData(\r\n    responseData.data.telcosAndTransactions.telcoAndTrxToday.slice(\r\n      (page - 1) * resultsPerPage,\r\n      page * resultsPerPage\r\n    )\r\n  );\r\n\r\n  setGettingDashboardData(false)\r\n\r\n}\r\n      catch (error) {\r\n        setGettingDashboardData(false)\r\n        setGettingDashboardDataError(true)\r\n  setDashboardText(\"Unable to retrieve dashboard data\")\r\n      }\r\n    };\r\n\r\n       useEffect(() => {\r\n    getDashboardData()\r\n      }, []) \r\n\r\n\r\n    \r\n\r\n  return (\r\n<div>\r\n  {(gettingDashboardData === true) &&\r\n   <div>\r\n      <div className=\"text-center\">\r\n    <Spinner aria-label=\"Center-aligned spinner example\" size=\"xl\" color= \"purple\" />\r\n    <p className=\"text-lg text-purple-primary\">{dashboardText}</p>\r\n  </div>\r\n    </div>}\r\n\r\n    {(gettingDashboardDataError === true) &&\r\n   <div>\r\n      <div className=\"text-center\">\r\n    <p className=\"text-lg text-red-primary\">{dashboardText}</p>\r\n    <p onClick={()=> history.push(\"/login\")} className=\"text-base cursor-pointer text-purple-primary\"> Go back to Login</p>\r\n  </div>\r\n    </div>}\r\n\r\n\r\n    { (gettingDashboardData === false && gettingDashboardDataError === false) && \r\n   <div className=\"md:grid gap-8 font-circular-std\">\r\n      <div className=\"col-span-2 mt-8 h-[22.9375rem]\">\r\n        <InfoCard\r\n          title=\"Total transactions completed\"\r\n          cardValue = {`${dashboardStates.totalTransactionValue}`}\r\n          symbol = \"&#8358;\"\r\n          options={PeriodFilterOption}\r\n          onChange = {handleTotalTransactionSelectChange}\r\n          cardLink=\"/app/reports\"\r\n          additionalStyle=\"text-purple-primary pb-4\"\r\n          linkText=\"View more details\"\r\n        />  \r\n        <InfoCard\r\n          title=\"Total transactions completed\"\r\n          cardValue= {`${dashboardStates.percentageSuccess}%`}\r\n          spanText={`${dashboardStates.percentageFailure}% failure`}\r\n          options={PeriodFilterOption}\r\n          onChange = {handleTotalTransactionVolumeSelectChange}\r\n          cardLink=\"/app/reports\"\r\n          additionalStyle=\"text-green-primary pb-4\"\r\n          linkText=\"View more details\"\r\n        />\r\n      </div> \r\n\r\n      <div className=\"col-span-4 my-8 pb-8 border border-black-secondary border-opacity-5 rounded-lg\">\r\n        <div className=\"overflow-x-auto relative bg-white pl-6 pt-6 pr-14 pb-2 rounded-lg\">\r\n          <table className=\"w-full text-sm text-left text-gray-500\">\r\n            <thead className=\"text-base font-bold text-black-secondary\">\r\n            <tr>\r\n               <td> Telco/Vendor Switch</td> \r\n                  </tr>\r\n         \r\n            </thead>\r\n            <tbody>\r\n                {dashboardStates.vendorTelcoMap.map((user, i) => (\r\n                <tr key={i} className=\"bg-white border-b\">\r\n                <td className=\"py-6 px-6 font-sm text-black-secondary whitespace-nowrap\">\r\n                  <div className=\"flex items-center\">\r\n                    <p className=\"font-sm text-black-secondary pl-2\">\r\n                    {user.telcoName}\r\n                    </p>\r\n                  </div>\r\n                </td>\r\n                <td className=\"py-6 px-6\">\r\n                  <LinkIcon />\r\n                </td>\r\n                <td className=\"py-6 px-6\">{user.vendorName}</td>\r\n                <td className=\"py-6 px-6\">\r\n                  <a href=\"/app/admin/vendor-telco\" className=\"text-purple-primary\">\r\n                    Switch{\" \"}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))} \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-span-6 border border-black-secondary border-opacity-5 rounded-lg\">\r\n        <div className=\"flex justify-between w-full bg-white h-[4.8125rem] items-center px-6\">\r\n          <div className=\"flex\">\r\n            <h2 className=\"text-base font-bold text-black-secondary pr-7 pt-[0.2rem]\">\r\n              Transaction Volume\r\n            </h2>\r\n            <FormSelect\r\n              className=\"border border-none text-black-70 text-xs rounded-lg outline-none focus:border-white focus:ring-white block w-4/5 h-11/12\"\r\n              options={PeriodOption}\r\n              onChange = {handleTransactionVolumeChange}\r\n            />\r\n          </div>\r\n          <div className=\"items-end\">\r\n            <a href=\"/app/reports\" className=\"text-sm text-purple-primary\">\r\n              View All Transactions\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"overflow-x-auto relative bg-white pl-6 pr-14 pb-2 rounded-lg\">\r\n          <table className=\"w-full text-sm text-left text-gray-500\">\r\n            <thead className=\"text-sm text-black-primary opacity-70 bg-dashboard-background\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"py-3 px-6 text-center\">\r\n                  Telco name\r\n                </th>\r\n                <th scope=\"col\" className=\"py-3 px-6 text-center\">\r\n                  Successful Transactions\r\n                </th>\r\n                <th scope=\"col\" className=\"py-3 px- text-center\">\r\n                  Failed Transactions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data.map((transaction, i) => (\r\n            <tr key={i} className=\"bg-white border-b py-4 px-6 text-center\">\r\n                <td className=\"font-medium text-gray-900 whitespace-nowrap\">\r\n                    {transaction.telco}\r\n                </td>\r\n                <td className=\"py-6 px-6 text-green-primary text-center\">\r\n                &#8358;{transaction.successTrxn}\r\n                </td>\r\n                <td className=\"py-6 px-6 text-red-primary text-center\">\r\n                &#8358; {transaction.failedTxn}\r\n                </td>\r\n            \r\n            </tr>\r\n            \r\n\r\n            ))} \r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n              totalResults={totalResults}\r\n              resultsPerPage={resultsPerPage}\r\n              label=\"Table navigation\"\r\n              onChange={onPageChange}\r\n            />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-span-3 border border-black-secondary border-opacity-5 rounded-lg\">\r\n        <div className=\"overflow-x-auto relative bg-white pl-6 pt-6 pr-14 pb-2 rounded-lg\">\r\n          <table className=\"w-full text-sm text-left text-gray-500\">\r\n            <thead className=\"text-base font-bold text-black-secondary pt-4 pb-6\">\r\n              \r\n              <tr> \r\n                <td>Vendors Available </td>\r\n                 </tr> \r\n            </thead>\r\n            <tbody>\r\n                {dashboardStates.vendorList.map((vendor, i) => (\r\n            <tr key={i} className=\"bg-white border-b py-4 px-6\">\r\n                <td className=\"font-sm text-black-secondary whitespace-nowrap py-4 px-6\">\r\n                   {vendor.vendorName}\r\n                </td>\r\n            </tr>\r\n            \r\n\r\n            ))} \r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-span-3 border border-black-secondary border-opacity-5 rounded-lg\">\r\n        <div className=\"overflow-x-auto relative bg-white pl-6 pt-6 pr-14 pb-2 rounded-lg\">\r\n          <table className=\"w-full text-sm text-left text-gray-500\">\r\n            <thead className=\"text-base font-bold text-black-secondary pb-6 pt-4\">\r\n              <tr>\r\n               <td> Telcos Available </td> \r\n                  </tr>\r\n            </thead>\r\n            <tbody>\r\n                {dashboardStates.telcoList.map((telco, i) => (\r\n            <tr key={i} className=\"bg-white border-b py-4 px-6\">\r\n                <td className=\"font-sm text-black-secondary whitespace-nowrap py-4 px-6\">\r\n                   {telco.telcoName}\r\n                </td>\r\n            </tr>\r\n            \r\n\r\n            ))} \r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div> \r\n    </div> }\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dashboard;\r\n","export const userOptions = [\r\n  {\r\n    id: 1,\r\n    value: \"\",\r\n    name: \"select role\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"admin\",\r\n    name: \"admin\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"superAdmin\",\r\n    name: \"superAdmin\",\r\n  },\r\n];\r\n\r\nexport const PeriodOption = [\r\n  {\r\n    id: 1,\r\n    value: \"today\",\r\n    name: \"Today\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"weekly\",\r\n    name: \"This week\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"monthly\",\r\n    name: \"This month\",\r\n  },\r\n];\r\n\r\nexport const PeriodFilterOption = [\r\n  {\r\n    id: 1,\r\n    value: \"Total\",\r\n    name: \"Total\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Today\",\r\n    name: \"Today\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"Weekly\",\r\n    name: \"This week\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"Monthly\",\r\n    name: \"This month\",\r\n  },\r\n];\r\n\r\nexport const StatusOption = [\r\n  {\r\n    id: 1,\r\n    value: \"\",\r\n    name: \"Filter by\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"active\",\r\n    name: \"Active\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"inactive\",\r\n    name: \"Inactive\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"pending\",\r\n    name: \"Pending\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"archived\",\r\n    name: \"Archived\",\r\n  },\r\n];\r\n\r\nexport const statusOptions = [\r\n  {\r\n    id: 1,\r\n    value: \"\",\r\n    name: \"Select Status\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Y\",\r\n    name: \"Successful\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"F\",\r\n    name: \"Failed\",\r\n  },\r\n];\r\n"],"names":["onChange","id","label","type","options","value","defaultValue","className","map","name","title","cardValue","additionalStyle","spanText","cardLink","linkText","additionalSelectStyle","additionalCardStyle","additionalLinkStyle","symbol","Card","CardBody","href","useDispatch","history","useHistory","useState","page","setPage","data","setData","gettingDashboardData","setGettingDashboardData","gettingDashboardDataError","setGettingDashboardDataError","dashboardText","setDashboardText","totalCompletedTransaction","dailyCompletedTransaction","weeklyCompletedTransaction","monthlyCompletedTransaction","totalSuccessPercentage","totalDailySuccessPercentage","totalWeeklySuccessPercentage","totalMonthlySuccessPercentage","totalFailurePercentage","totalDailyFailurePercentage","totalWeeklyFailurePercentage","totalMonthlyFailurePercentage","monthlyTransactions","weeklyTransactions","dailyTransactions","vendorTelcoMap","vendorList","telcoList","totalTransactionValue","percentageSuccess","percentageFailure","transactionsList","dashboardStates","setDashboardStates","resultsPerPage","totalResults","length","useEffect","slice","getDashboardData","fetchDashboardData","responseData","getAllActiveVendors","vendorData","getAllActiveTelcos","telcoData","prevStates","cardTrxnCompleted","totalTrxnCompletedAll","totalTrxnCompletedDaily","totalTrxnCompletedWeekly","totalTrxnCompletedmonthly","cardTrxnPercentageCompleted","totalTrxnPercentageAllSuccessful","toFixed","totalTrxnPercentageDailySuccess","totalTrxnPercentageWeeklySuccess","totalTrxnPercentagemonthlySuccess","totalTrxnPercentageAllFailed","totalTrxnPercentageDailyFailed","totalTrxnPercentageWeeklyFailed","totalTrxnPercentagemonthlyFailed","telcosAndTransactions","telcoAndTrxThisMonth","telcoAndTrxThisWeek","telcoAndTrxToday","telcosAndVendorMapping","dataList","size","color","onClick","push","PeriodFilterOption","e","target","user","i","telcoName","LinkIcon","vendorName","PeriodOption","scope","transaction","telco","successTrxn","failedTxn","Pagination","p","vendor","userOptions","StatusOption","statusOptions"],"sourceRoot":""}