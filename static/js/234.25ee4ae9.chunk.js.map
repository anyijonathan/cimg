{"version":3,"file":"static/js/234.25ee4ae9.chunk.js","mappings":"4IAiCA,IA7BE,SAAC,GASM,IAAD,IARJA,KAAAA,OAQI,MARG,SAQH,EAPJC,EAOI,EAPJA,UACAC,EAMI,EANJA,SACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SAEI,EADJC,WAGF,OACE,oBACEN,UACE,6RACIC,GAAY,aADhB,KACkCD,EAEpCD,KAAOA,EACPG,QAAWA,EACXD,SAAYA,IAAsB,EAPpC,UASGE,IAAQ,yBAAMA,IACRE,EACAD,IAIZ,C,4CCmCD,IAhEkB,SAAC,GAkBZ,IAjBLG,EAiBI,EAjBJA,MACAC,EAgBI,EAhBJA,YACAC,EAeI,EAfJA,gBACAC,EAcI,EAdJA,YAcI,IAbJV,UAAAA,OAaI,MAbQ,GAaR,EAZJW,EAYI,EAZJA,MACAC,EAWI,EAXJA,GACAC,EAUI,EAVJA,SACAC,EASI,EATJA,OACAf,EAQI,EARJA,KACAgB,EAOI,EAPJA,KACAC,EAMI,EANJA,aACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SAEI,EADJf,SAEA,OACE,iBAAKL,UAAWA,EAAhB,WACE,iBAAKA,UAAU,uBAAf,UACGO,IACC,mBACEc,QAAST,EACTZ,UAAS,kEAFX,UAIG,IACAO,KAIJC,IACC,eACEc,KAAMb,EACNT,UAAS,yFAFX,UAIG,IACAQ,SAIP,kBACEI,GAAIA,EACJZ,UACE,2LACAA,EAEFU,YAAaA,GAAe,GAC5BC,MAAOA,EACPE,SAAUA,EACVC,OAAQA,EACRC,KAAMA,EACNhB,KAAMA,EACNiB,aAAcA,GAAgB,GAC9BC,UAAWA,EACXC,UAAWA,EACXC,SAAUA,EACVC,SAAUA,MAIjB,C,sDCvCD,IAtBqB,SAAC,GAAwD,EAAvDG,YAAwD,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,iBAAkBzB,EAAgB,EAAhBA,UAC5D,OACE,iBAAKA,UAAW,uDAAyDA,EAAzE,UAEe,YAAXwB,IACA,iBAAKxB,UAAS,2FAAd,WACE,SAAC,EAAA0B,iBAAD,KACA,cAAG1B,UAAU,mDAAb,SAAiEyB,OAI1D,YAAXD,IACA,iBAAKxB,UAAS,kGAAd,WACE,SAAC,EAAA0B,iBAAD,KACA,cAAG1B,UAAU,mDAAb,SAAiEyB,SAMxE,C,gHCiED,UAjFsB,WAEpB,IAAME,GAAUC,EAAAA,EAAAA,MAElB,GAA8BC,EAAAA,EAAAA,UAAS,UAAvC,eAAOC,EAAP,KACA,GADA,MACqCD,EAAAA,EAAAA,UAAS,KAA9C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOzB,EAAP,KAAkB6B,EAAlB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,YAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAO5B,EAAP,KAAiBmC,EAAjB,KACA,GAAgDP,EAAAA,EAAAA,UAAS,IAAzD,eAAOJ,EAAP,KAAyBY,EAAzB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAec,EAAf,KAwCE,OACE,0BACE,iBAAKtC,UAAU,8EAAf,WACE,SAAC,IAAD,CAAcyB,iBAAkBA,EAAkBD,OAAUA,KAC1D,4BACE,iBAAKxB,UAAU,2DAAf,WACE,SAAC,EAAAuC,SAAD,KACA,eAAIvC,UAAU,sCAAd,+BAGF,gBAAKA,UAAU,0DAAf,UACE,iBAAKA,UAAU,sBAAf,WACE,eAAIA,UAAU,mEAAd,kCACA,cAAGA,UAAU,6DAAb,6HACA,SAAC,IAAD,CAAWA,UAAU,QAAQU,YAAa,gBAAgBX,KAAM,QAAQQ,MAAO,QAAQM,SAnD7E,SAAC2B,GACzB,IAAQ7B,EAAU6B,EAAEC,OAAZ9B,MACRqB,EAAcrB,EACf,KAiDe,iBAAKX,UAAS,gCAA2B8B,GAAzC,WACE,SAAC,EAAAY,YAAD,CAAa1C,UAAU,cACvB,cAAGA,UAAU,8CAAb,wDAEF,SAAC,IAAD,CAAQE,QAnDA,WACtB+B,GAAa,GACbG,GAAY,GACZD,EAAc,mCAEdQ,YAAW,WAEJZ,GAcHO,EAAU,WACVD,EAAoB,0CACpBM,YAAW,WACThB,EAAQiB,KAAK,kBACd,GAAE,OAjBHN,EAAU,WACVD,EAAoB,qBACpBJ,GAAa,GACbG,GAAY,GACZD,EAAc,YAEdQ,YAAW,WACTL,EAAU,IACVD,EAAoB,GACrB,GAAC,KAWL,GAAE,IACJ,EAsBiDjC,UAAaA,EAAWH,SAAYA,EAAtE,SAAiFiC,KACjF,gBAAKlC,UAAU,0BAAf,UACE,cAAGsB,KAAK,IAAItB,UAAU,qDAAtB,mDAQjB,C","sources":["components/Button.js","components/FormInput.js","components/Notification.js","pages/authPages/ResetPassword.js"],"sourcesContent":["import { Spinner } from 'flowbite-react';\r\nimport React from 'react'\r\n\r\nconst Button = \r\n  ({ \r\n    type = 'submit',\r\n    className,\r\n    disabled,\r\n    onClick,\r\n    icon,\r\n    isLoading,\r\n    children,\r\n    loaderText\r\n  }) => {\r\n \r\n  return (\r\n    <button\r\n      className = {       \r\n        `bg-[linear-gradient(89.92deg,_#60088C_0.07%,_#A11E90_92.22%)] w-full h-12 border border-purple-secondary text-white text-sm rounded font-circular-std outline-none focus:border-purple-secondary focus:ring-purple-200  block pt-4 pb-6 px-16 ease-in-out duration-150 \r\n          ${disabled && 'opacity-60'} ` + className\r\n      }\r\n      type= {type}\r\n      onClick = {onClick}\r\n      disabled = {disabled ? disabled : false}   \r\n    >\r\n      {icon && <div>{icon}</div>}\r\n            {children}\r\n            {isLoading}\r\n \r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\n\r\nconst FormInput = ({\r\n  label,\r\n  endingLabel,\r\n  endingLabelLink,\r\n  placeholder,\r\n  className = \"\",\r\n  value,\r\n  id,\r\n  onChange,\r\n  onBlur,\r\n  type,\r\n  name,\r\n  autoComplete,\r\n  inputMode,\r\n  maxLength,\r\n  required,\r\n  readOnly,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"flex justify-between\">\r\n        {label && (\r\n          <label\r\n            htmlFor={id}\r\n            className={`mb-3 text-sm font-medium font-circular-std text-black-secondary`}\r\n          >\r\n            {\" \"}\r\n            {label}\r\n          </label>\r\n        )}\r\n\r\n        {endingLabel && (\r\n          <a\r\n            href={endingLabelLink}\r\n            className={`mb-3 text-sm text-right font-medium font-circular-std text-purple-secondary opacity-70`}\r\n          >\r\n            {\" \"}\r\n            {endingLabel}\r\n          </a>\r\n        )}\r\n      </div>\r\n      <input\r\n        id={id}\r\n        className={\r\n          `w-full md:w-[27.25rem] h-12 border border-purple-secondary text-black-40 text-sm rounded outline-none focus:border-purple-secondary focus:ring-purple-200  block py-4 pl-4 pr-[0.625rem]` +\r\n          className\r\n        }\r\n        placeholder={placeholder || \"\"}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        type={type}\r\n        autoComplete={autoComplete || \"\"}\r\n        inputMode={inputMode}\r\n        maxLength={maxLength}\r\n        required={required}\r\n        readOnly={readOnly}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react'\r\nimport { NotificationIcon } from '../icons'\r\n\r\nconst Notification = ({statusColor, status, notificationText, className }) => {\r\n  return (\r\n    <div className={`mb-4 md:mb-0 md:absolute md:left-[77%] md:top-[10%] ` + className}>\r\n\r\n      {(status === \"success\") && (\r\n        <div className={`w-[60%] h-10 md:h-12 md:w-[21.8125rem] justify-center flex bg-green-primary items-center`}>\r\n          <NotificationIcon />\r\n          <p className='font-medium text-base md:text-xs text-white pl-6'>{notificationText}</p>\r\n        </div>\r\n      )}\r\n\r\n    {(status === \"failure\") && (\r\n      <div className={`w-full px-4 py-2 h-10 md:h-12 md:w-[21.8125rem] justify-center flex bg-red-primary items-center`}>\r\n        <NotificationIcon />\r\n        <p className='font-medium text-base md:text-xs text-white pl-6'>{notificationText}</p>\r\n      </div>\r\n    )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, {useState} from 'react'\r\nimport FormInput from '../../components/FormInput'\r\nimport { FcmbLogo, SuccessIcon } from '../../icons'\r\nimport Button from '../../components/Button'\r\nimport Notification from '../../components/Notification'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ResetPassword = () => {\r\n\r\n  const history = useHistory();\r\n\r\nconst [success, setSuccess] = useState(\"hidden\")\r\nconst [emailValue, setEmailValue ] = useState(\"\")\r\nconst [isLoading, setIsLoading] = useState(false);\r\nconst [buttonText, setButtonText] = useState(\"Continue\")\r\nconst [disabled, setDisabled] = useState(false);\r\nconst [notificationText, setNotificationText] = useState(\"\")\r\nconst [status, setStatus] = useState(\"\");\r\n\r\n\r\nconst handleChangeEmail = (e) => {\r\n  const { value } = e.target;\r\n  setEmailValue(value);\r\n};\r\n\r\nconst handleEmailSend = () => {\r\n  setIsLoading(true);\r\n  setDisabled(true)\r\n  setButtonText(\"Sending password reset email...\")\r\n\r\n  setTimeout(() => {\r\n     \r\n    if (!emailValue){\r\n      setStatus(\"failure\");\r\n      setNotificationText(\"please try again!\")\r\n      setIsLoading(false);\r\n      setDisabled(false)\r\n      setButtonText(\"Continue\")\r\n\r\n      setTimeout(() => {\r\n        setStatus(\"\");\r\n        setNotificationText(\"\")\r\n      },5000)\r\n    }\r\n\r\n    else {\r\n      setStatus(\"success\")\r\n      setNotificationText(\"Password reset email sent successfully\")\r\n      setTimeout(() => {\r\n        history.push(\"/password-reset\")\r\n      }, 2000)\r\n   \r\n    }\r\n  }, 3000)\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='grid h-screen place-items-center bg-main-background pb-14 font-circular-std'>\r\n        <Notification notificationText={notificationText} status = {status} />\r\n          <div>\r\n            <div className='md:mb-20 md:w-[36.5rem] justify-center flex items-center'>\r\n              <FcmbLogo />\r\n              <h3 className='font-medium text-black-primary pl-6'>Vendor Switch</h3>\r\n            </div>\r\n        \r\n            <div className='bg-other-background shadow-sm rounded-lg md:w-144  mt-3'>\r\n              <div className='py-10 px-[4.375rem]'>\r\n                <h2 className='text-2xl font-medium leading-[1.875rem] text-black-primary pb-10'>Reset your password</h2>\r\n                <p className='font-base md:w-[27.6875rem] pb-10 text-black-70 opacity-70'>Enter the email address associated with your account. A password reset link will be sent to the email address.</p>\r\n                <FormInput className='mb-10' placeholder= \"Email address\" type= \"email\" label= \"Email\" onChange={handleChangeEmail} />\r\n                <div className={`md:mt-6 mb-4 md:mb-10 ${success}`}>\r\n                  <SuccessIcon className='mt-[3px]' />\r\n                  <p className='pl-3 text-sm text-green-primary font-medium'>Password reset email sent successfully</p>\r\n                </div>\r\n                <Button onClick={handleEmailSend} isLoading = {isLoading} disabled = {disabled}>{buttonText}</Button>\r\n                <div className='text-center mt-4 w-full'>\r\n                  <a href='/' className='text-purple-primary font-medium text-sm opacity-70'>Take me back to sign in</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword"],"names":["type","className","disabled","onClick","icon","isLoading","children","loaderText","label","endingLabel","endingLabelLink","placeholder","value","id","onChange","onBlur","name","autoComplete","inputMode","maxLength","required","readOnly","htmlFor","href","statusColor","status","notificationText","NotificationIcon","history","useHistory","useState","success","emailValue","setEmailValue","setIsLoading","buttonText","setButtonText","setDisabled","setNotificationText","setStatus","FcmbLogo","e","target","SuccessIcon","setTimeout","push"],"sourceRoot":""}