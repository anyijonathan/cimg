{"version":3,"file":"static/js/238.ef106f0e.chunk.js","mappings":"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AAO,GACPI,KAAM,eAER,CACEH,GAAI,EACJD,MAAO,QACPI,KAAM,SAER,CACEH,GAAI,EACJD,MAAO,aACPI,KAAM,eAIG2F,EAAe,CAC1B,CACE9F,GAAI,EACJD,MAAO,QACPI,KAAM,SAER,CACEH,GAAI,EACJD,MAAO,SACPI,KAAM,aAER,CACEH,GAAI,EACJD,MAAO,UACPI,KAAM,eAIG4F,EAAqB,CAChC,CACE/F,GAAI,EACJD,MAAO,QACPI,KAAM,SAER,CACEH,GAAI,EACJD,MAAO,QACPI,KAAM,SAER,CACEH,GAAI,EACJD,MAAO,SACPI,KAAM,aAER,CACEH,GAAI,EACJD,MAAO,UACPI,KAAM,eAIG6F,EAAe,CAC1B,CACEhG,GAAI,EACJD,MAAO,GACPI,KAAM,aAER,CACEH,GAAI,EACJD,MAAO,SACPI,KAAM,UAER,CACEH,GAAI,EACJD,MAAO,WACPI,KAAM,YAER,CACEH,GAAI,EACJD,MAAO,UACPI,KAAM,WAER,CACEH,GAAI,EACJD,MAAO,WACPI,KAAM,aAIG8F,EAAgB,CAC3B,CACEjG,GAAI,EACJD,MAAO,GACPI,KAAM,iBAER,CACEH,GAAI,EACJD,MAAO,IACPI,KAAM,cAER,CACEH,GAAI,EACJD,MAAO,IACPI,KAAM,U","sources":["components/Button.js","components/FormInput.js","components/FormSelect.js","components/Modals/ActionModal.js","components/Notification.js","pages/SuperAdminPages/Settings.js","utils/constants.js"],"sourcesContent":["import { Spinner } from 'flowbite-react';\r\nimport React from 'react'\r\n\r\nconst Button = \r\n  ({ \r\n    type = 'submit',\r\n    className,\r\n    disabled,\r\n    onClick,\r\n    icon,\r\n    isLoading,\r\n    children,\r\n    loaderText\r\n  }) => {\r\n \r\n  return (\r\n    <button\r\n      className = {       \r\n        `bg-[linear-gradient(89.92deg,_#60088C_0.07%,_#A11E90_92.22%)] w-full h-12 border border-purple-secondary text-white text-sm rounded font-circular-std outline-none focus:border-purple-secondary focus:ring-purple-200  block pt-4 pb-6 px-16 ease-in-out duration-150 \r\n          ${disabled && 'opacity-60'} ` + className\r\n      }\r\n      type= {type}\r\n      onClick = {onClick}\r\n      disabled = {disabled ? disabled : false}   \r\n    >\r\n      {icon && <div>{icon}</div>}\r\n            {children}\r\n            {isLoading}\r\n \r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\n\r\nconst FormInput = ({\r\n  label,\r\n  endingLabel,\r\n  endingLabelLink,\r\n  placeholder,\r\n  className = \"\",\r\n  value,\r\n  id,\r\n  onChange,\r\n  onBlur,\r\n  type,\r\n  name,\r\n  autoComplete,\r\n  inputMode,\r\n  maxLength,\r\n  required,\r\n  readOnly,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"flex justify-between\">\r\n        {label && (\r\n          <label\r\n            htmlFor={id}\r\n            className={`mb-3 text-sm font-medium font-circular-std text-black-secondary`}\r\n          >\r\n            {\" \"}\r\n            {label}\r\n          </label>\r\n        )}\r\n\r\n        {endingLabel && (\r\n          <a\r\n            href={endingLabelLink}\r\n            className={`mb-3 text-sm text-right font-medium font-circular-std text-purple-secondary opacity-70`}\r\n          >\r\n            {\" \"}\r\n            {endingLabel}\r\n          </a>\r\n        )}\r\n      </div>\r\n      <input\r\n        id={id}\r\n        className={\r\n          `w-full md:w-[27.25rem] h-12 border border-purple-secondary text-black-40 text-sm rounded outline-none focus:border-purple-secondary focus:ring-purple-200  block py-4 pl-4 pr-[0.625rem]` +\r\n          className\r\n        }\r\n        placeholder={placeholder || \"\"}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        type={type}\r\n        autoComplete={autoComplete || \"\"}\r\n        inputMode={inputMode}\r\n        maxLength={maxLength}\r\n        required={required}\r\n        readOnly={readOnly}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\n\r\nconst FormSelect = ({\r\n\tonChange,\r\n\tid,\r\n\tlabel,\r\n\ttype,\r\n\toptions,\r\n\tvalue,\r\n\tdefaultValue,\r\n\tclassName,\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"font-circular-std\">\r\n\t\t\t{label && (\r\n\t\t\t\t<label className=\"block mb-4 text-sm font-medium text-black-secondary\">\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\r\n\t\t\t<select\r\n\t\t\t\tid={id}\r\n\t\t\t\tclassName={\r\n\t\t\t\t\t`border border-opacity-50 border-black-40 text-black-40 text-sm rounded outline-none focus:border-black-40 focus:border-opacity-50 focus:ring-gray-200 block pl-4 pr-[0.625rem]` +\r\n\t\t\t\t\tclassName\r\n\t\t\t\t}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\r\n\t\t\t>\r\n\t\t\t\t{options &&\r\n\t\t\t\t\toptions.map((options) => (\r\n\t\t\t\t\t\t<option key={options.id} value={options.value}>\r\n\t\t\t\t\t\t\t{options.name}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FormSelect;\r\n","import { Modal } from \"flowbite-react\";\r\nimport React, { Children } from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nconst ActionModal = ({\r\n  onClose,\r\n  show,\r\n  modalAction,\r\n  modalHeader,\r\n  modalClose,\r\n  actionType,\r\n  actionReceiver,\r\n  isLoading,\r\n  disabled,\r\n  loadingText,\r\n  Children,\r\n}) => {\r\n  return (\r\n    <div className=\"font-circular-std\">\r\n      <Modal show={show} size=\"xl\" popup={true} onClose={onClose}>\r\n        <Modal.Header>\r\n          <div className=\"p-6\">\r\n            <h3 className=\"w-[90%] text-lg font-bold text-black-secondary capitalize\">{`${actionType}  ${actionReceiver}`}</h3>\r\n          </div>\r\n          <div className=\"md:w-[27.75rem]\">\r\n            <hr />\r\n          </div>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div className=\"text-center w-full mt-11\">\r\n            <h3 className=\"mb-20 text-lg text-black-secondary font-medium\">\r\n              {`Are you sure you want to ${actionType} this ${actionReceiver}?`}\r\n            </h3>\r\n            <div className=\"flex justify-center gap-4\">\r\n              <Button\r\n                className=\"bg-transparent text-black-70 font-medium border-black-70 border-opacity-30\"\r\n                color=\"failure\"\r\n                onClick={modalClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => modalAction()}\r\n                isLoading={isLoading}\r\n                disabled={disabled}\r\n              >\r\n                {`Yes, ${actionType}`}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionModal;\r\n","import React from 'react'\r\nimport { NotificationIcon } from '../icons'\r\n\r\nconst Notification = ({statusColor, status, notificationText, className }) => {\r\n  return (\r\n    <div className={`mb-4 md:mb-0 md:absolute md:left-[77%] md:top-[10%] ` + className}>\r\n\r\n      {(status === \"success\") && (\r\n        <div className={`w-[60%] h-10 md:h-12 md:w-[21.8125rem] justify-center flex bg-green-primary items-center`}>\r\n          <NotificationIcon />\r\n          <p className='font-medium text-base md:text-xs text-white pl-6'>{notificationText}</p>\r\n        </div>\r\n      )}\r\n\r\n    {(status === \"failure\") && (\r\n      <div className={`w-full px-4 py-2 h-10 md:h-12 md:w-[21.8125rem] justify-center flex bg-red-primary items-center`}>\r\n        <NotificationIcon />\r\n        <p className='font-medium text-base md:text-xs text-white pl-6'>{notificationText}</p>\r\n      </div>\r\n    )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from \"react\";\r\nimport Notification from \"../../components/Notification\";\r\nimport { ArrowRight, UserIcon } from \"../../icons\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport Button from \"../../components/Button\";\r\nimport FormSelect from \"../../components/FormSelect\";\r\nimport { Modal } from \"flowbite-react\";\r\nimport ActionModal from \"../../components/Modals/ActionModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CreateUser,\r\n  getAllUsers,\r\n  RemoveUser,\r\n  setId,\r\n  userMgtSelector,\r\n} from \"../../Redux/Slices/userMgtSlice\";\r\nimport { userOptions } from \"../../utils/constants\";\r\nimport { Pagination } from \"@windmill/react-ui\";\r\nimport { userSelector } from \"../../Redux/Slices/authSlice\";\r\n\r\nconst Settings = () => {\r\n  const { emailAddress, userName, userRole } = useSelector(userSelector);\r\n  //const {userId} = useSelector(userMgtSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [notificationText, setNotificationText] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [openTab, setOpenTab] = useState(1);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isActionModalOpen, setIsActionModalOpen] = useState(false);\r\n  const [actionReceiver, setActionReceiver] = useState(\"\");\r\n  const [actionType, setActionType] = useState(\"\");\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [buttonText, setButtonText] = useState(\"Create User\");\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const setTabOne = () => {\r\n    setOpenTab(1);\r\n  };\r\n\r\n  const setTabTwo = () => {\r\n    setOpenTab(2);\r\n  };\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  function openRemoveUserModal(id) {\r\n    setUserId(id);\r\n    setActionType(\"remove\");\r\n    setActionReceiver(\"user\");\r\n    setIsActionModalOpen(true);\r\n  }\r\n\r\n  function closeActionModal() {\r\n    setIsActionModalOpen(false);\r\n  }\r\n\r\n  const handleEmailChange = (e) => {\r\n    const { value } = e.target;\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFullNameChange = (e) => {\r\n    const { value } = e.target;\r\n    setFullName(value);\r\n  };\r\n\r\n  const handleRoleChange = (e) => {\r\n    const { value } = e.target;\r\n    console.log(value);\r\n    setRole(value);\r\n  };\r\n\r\n  // Function handling New user creation\r\n  async function createNewUser() {\r\n    const data = {\r\n      fullName: fullName,\r\n      emailAddress: email,\r\n      role: role,\r\n    };\r\n\r\n    setDisabled(true);\r\n    setIsLoading(true);\r\n    setButtonText(\"creating new user...\");\r\n\r\n    let responseData = await CreateUser(data,emailAddress,userRole);\r\n    if (responseData.code !== \"00\") {\r\n      setDisabled(false);\r\n      setIsLoading(false);\r\n      setButtonText(\"create new user\");\r\n      closeModal();\r\n      setStatus(\"failure\");\r\n      setNotificationText(responseData.description);\r\n\r\n      setTimeout(() => {\r\n        setStatus(\"\");\r\n        setNotificationText(\"\");\r\n      }, 3000);\r\n    } else {\r\n      setDisabled(false);\r\n      setIsLoading(false);\r\n      setButtonText(\"create new user\");\r\n      closeModal();\r\n      setStatus(\"success\");\r\n      setNotificationText(responseData.description);\r\n   \r\n      setTimeout(() => {\r\n        setStatus(\"\");\r\n        setNotificationText(\"\");\r\n      }, 3000);\r\n      fetchUserList();\r\n    }\r\n  }\r\n\r\n  // FUNCTION FOR REMOVING A USER\r\n  async function removeUser() {\r\n    let id = userId;\r\n    const data = {\r\n      fullName: fullName,\r\n      emailAddress: email,\r\n      role: role,\r\n    };\r\n    try {\r\n      setDisabled(true);\r\n      setIsLoading(true);\r\n      await RemoveUser(id,emailAddress,userRole);\r\n      setIsActionModalOpen(false);\r\n      setStatus(\"success\");\r\n      setNotificationText(`${actionReceiver} ${actionType}d successfully`);\r\n      setDisabled(false);\r\n      setIsLoading(false);\r\n\r\n      setTimeout(() => {\r\n        setStatus(\"\");\r\n        setNotificationText(\"\");\r\n      }, 3000);\r\n      fetchUserList();\r\n    } catch (error) {\r\n      setIsActionModalOpen(false);\r\n      setDisabled(false);\r\n      setIsLoading(false);\r\n      setStatus(\"failure\");\r\n      setNotificationText(\"User removel failed, please try again\");\r\n    }\r\n  }\r\n\r\n  // GETTING USER LIST ON PAGE LOAD\r\n  const fetchUserList = async () => {\r\n    try {\r\n      let responseData = await getAllUsers(emailAddress,userRole);\r\n  \r\n      setUsersList(responseData.dataList);\r\n      setData(\r\n        responseData.dataList.slice(\r\n          (page - 1) * resultsPerPage,\r\n          page * resultsPerPage\r\n        )\r\n      );\r\n    } catch (error) {\r\n      setStatus(\"failure\");\r\n      setNotificationText(\"couldn't fetch User list, kindly refresh page\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, [page]);\r\n\r\n  const resultsPerPage = 5;\r\n  const totalResults = usersList.length;\r\n\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n  /*    useEffect(() => {\r\n      console.log(usersList)\r\n    \r\n    }, [page]) */\r\n\r\n  return (\r\n    <div className=\"font-circular-std\">\r\n      {/*  -----------------------------------------------MODAL START---------------------------------------------------  */}\r\n      <Modal\r\n        show={isModalOpen}\r\n        onClose={closeModal}\r\n        popup={true}\r\n        size=\"lg\"\r\n        position=\"center\"\r\n      >\r\n        <Modal.Header>\r\n          <div className=\"p-6\">\r\n            <h3 className=\"w-[90%] text-lg font-bold text-black-secondary\">\r\n              Add New User\r\n            </h3>\r\n          </div>\r\n          <div className=\"md:w-[27.75rem] pb-10\">\r\n            <hr />\r\n          </div>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div className=\"space-y-6\">\r\n            <FormInput\r\n              onChange={handleFullNameChange}\r\n              label=\"Full Name\"\r\n              placeholder=\"Enter full name\"\r\n            />\r\n            <FormInput\r\n              onChange={handleEmailChange}\r\n              label=\"Email Address\"\r\n              placeholder=\"Enter email address\"\r\n            />\r\n            <FormSelect\r\n              onChange={handleRoleChange}\r\n              className=\"w-full md:w-[27.25rem] h-12\"\r\n              label=\"Role\"\r\n              options={userOptions}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"flex justify-between w-full\">\r\n            <Button\r\n              isLoading={isLoading}\r\n              disabled={disabled}\r\n              onClick={createNewUser}\r\n            >\r\n              {buttonText}\r\n            </Button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <ActionModal\r\n        onClose={closeActionModal}\r\n        show={isActionModalOpen}\r\n        modalClose={closeActionModal}\r\n        actionReceiver={actionReceiver}\r\n        actionType={actionType}\r\n        modalAction={removeUser}\r\n        isLoading={isLoading}\r\n        disabled={disabled}\r\n      />\r\n\r\n      {/* ----------------------------------------Modal End ----------------------------------------------- */}\r\n\r\n      <Notification notificationText={notificationText} status={status} />\r\n      <h2 className=\"text-xl font-bold text-black-secondary pb-9\">Settings</h2>\r\n      <div className=\"h-[48.75rem] bg-white grid grid-cols-5\">\r\n        <div className=\"col-span-1 border-r border-opacity-10 border-black-secondary\">\r\n          <ul className=\"pt-14 pl-10\">\r\n            <li>\r\n              <button\r\n                href=\"\"\r\n                onClick={setTabOne}\r\n                className={`${\r\n                  openTab === 1\r\n                    ? \"text-purple-primary\"\r\n                    : \"text-black-secondary opacity-70\"\r\n                }  inline-flex items-center pl-6 w-full h-12 text-sm font-normal transition-colors duration-150`}\r\n              >\r\n                Manage users\r\n                <ArrowRight\r\n                  className={`${openTab === 1 ? \"flex\" : \"hidden\"} ml-4`}\r\n                />\r\n              </button>\r\n            </li>\r\n\r\n            <li>\r\n              <button\r\n                href=\"\"\r\n                onClick={setTabTwo}\r\n                className={`${\r\n                  openTab === 2\r\n                    ? \"text-purple-primary\"\r\n                    : \"text-black-secondary opacity-70\"\r\n                }  inline-flex items-center pl-6 w-full h-12 text-sm font-normal transition-colors duration-150`}\r\n              >\r\n                Basic information\r\n                <ArrowRight\r\n                  className={`${openTab === 2 ? \"flex\" : \"hidden\"} ml-4`}\r\n                />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"col-span-4\">\r\n          <div className={openTab === 1 ? \"block\" : \"hidden\"}>\r\n            <div className=\"mt-16 pl-16\">\r\n              <div className=\"flex justify-between mb-10\">\r\n                <h2 className=\"text-base self-center font-bold text-black-secondary\">\r\n                  Manage Users\r\n                </h2>\r\n                <button\r\n                  onClick={openModal}\r\n                  className=\"pl-6 py-3 pr-6 border border-purple-secondary rounded font-circular-std outline-none focus:border-purple-secondary focus:ring-purple-200 ease-in-out duration-150\"\r\n                >\r\n                  <p className=\"linear-gradient-text text-sm font-normal\">\r\n                    + Add New User\r\n                  </p>\r\n                </button>\r\n              </div>\r\n              <table className=\"w-full text-left\">\r\n                <thead className=\"text-sm text-black-primary opacity-70 bg-gray-300\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Name\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Email Address\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Role\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Action\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-sm bg-other-background\">\r\n                  {data.map((user, i) => (\r\n                    <tr\r\n                      key={i}\r\n                      className=\"bg-white text-black-secondary border-b py-4 px-6\"\r\n                    >\r\n                      <td className=\"py-6 px-6 font-medium whitespace-nowrap\">\r\n                        {user.fullName}\r\n                      </td>\r\n                      <td className=\"py-6 px-6\">{user.emailAddress}</td>\r\n                      <td className=\"py-6 px-6\">{user.role}</td>\r\n                      <td className=\"py-6 px-6\">\r\n                        <button\r\n                          onClick={() => openRemoveUserModal(user.id)}\r\n                          className=\"text-base font-[450] text-red-primary opacity-70\"\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n\r\n                <Pagination\r\n                  totalResults={totalResults}\r\n                  resultsPerPage={resultsPerPage}\r\n                  label=\"Table navigation\"\r\n                  onChange={onPageChange}\r\n                />\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className={openTab === 2 ? \"block\" : \"hidden\"}>\r\n            <div className=\"mt-16 pl-16\">\r\n              <UserIcon className=\"h-24 w-24 mb-24\" />\r\n              <FormInput\r\n                className=\"mb-9\"\r\n                label=\"Display name\"\r\n                placeholder={userName}\r\n                readOnly=\"readOnly\"\r\n              />\r\n              <FormInput\r\n                className=\"mb-14\"\r\n                label=\"Email\"\r\n                placeholder={emailAddress}\r\n                readOnly=\"readOnly\"\r\n              />\r\n              <Button disabled className=\"newfee-button\">\r\n                Update\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","export const userOptions = [\r\n  {\r\n    id: 1,\r\n    value: \"\",\r\n    name: \"select role\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"admin\",\r\n    name: \"admin\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"superAdmin\",\r\n    name: \"superAdmin\",\r\n  },\r\n];\r\n\r\nexport const PeriodOption = [\r\n  {\r\n    id: 1,\r\n    value: \"today\",\r\n    name: \"Today\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"weekly\",\r\n    name: \"This week\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"monthly\",\r\n    name: \"This month\",\r\n  },\r\n];\r\n\r\nexport const PeriodFilterOption = [\r\n  {\r\n    id: 1,\r\n    value: \"Total\",\r\n    name: \"Total\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Today\",\r\n    name: \"Today\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"Weekly\",\r\n    name: \"This week\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"Monthly\",\r\n    name: \"This month\",\r\n  },\r\n];\r\n\r\nexport const StatusOption = [\r\n  {\r\n    id: 1,\r\n    value: \"\",\r\n    name: \"Filter by\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"active\",\r\n    name: \"Active\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"inactive\",\r\n    name: \"Inactive\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"pending\",\r\n    name: \"Pending\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"archived\",\r\n    name: \"Archived\",\r\n  },\r\n];\r\n\r\nexport const statusOptions = [\r\n  {\r\n    id: 1,\r\n    value: \"\",\r\n    name: \"Select Status\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Y\",\r\n    name: \"Successful\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"F\",\r\n    name: \"Failed\",\r\n  },\r\n];\r\n"],"names":["type","className","disabled","onClick","icon","isLoading","children","loaderText","label","endingLabel","endingLabelLink","placeholder","value","id","onChange","onBlur","name","autoComplete","inputMode","maxLength","required","readOnly","htmlFor","href","options","defaultValue","map","onClose","show","modalAction","modalClose","modalHeader","actionType","actionReceiver","loadingText","Children","size","popup","color","statusColor","status","notificationText","NotificationIcon","useSelector","userSelector","emailAddress","userName","userRole","useDispatch","useState","setNotificationText","setStatus","openTab","setOpenTab","isModalOpen","setIsModalOpen","isActionModalOpen","setIsActionModalOpen","setActionReceiver","setActionType","usersList","setUsersList","setIsLoading","buttonText","setButtonText","setDisabled","fullName","setFullName","email","setEmail","role","setRole","page","setPage","data","setData","userId","setUserId","closeModal","closeActionModal","CreateUser","responseData","code","description","setTimeout","fetchUserList","RemoveUser","getAllUsers","dataList","slice","resultsPerPage","useEffect","totalResults","length","position","e","target","console","log","userOptions","ArrowRight","scope","user","i","Pagination","p","UserIcon","PeriodOption","PeriodFilterOption","StatusOption","statusOptions"],"sourceRoot":""}